// Generated by view binder compiler. Do not edit!
package com.example.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVendorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText descriptionEditText;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final Button listButton;

  @NonNull
  public final EditText priceEditText;

  @NonNull
  public final EditText productNameEditText;

  @NonNull
  public final Button selectImageButton;

  @NonNull
  public final EditText storeNameEditText;

  @NonNull
  public final Button uploadButton;

  private ActivityVendorBinding(@NonNull LinearLayout rootView,
      @NonNull EditText descriptionEditText, @NonNull ImageView imageView,
      @NonNull Button listButton, @NonNull EditText priceEditText,
      @NonNull EditText productNameEditText, @NonNull Button selectImageButton,
      @NonNull EditText storeNameEditText, @NonNull Button uploadButton) {
    this.rootView = rootView;
    this.descriptionEditText = descriptionEditText;
    this.imageView = imageView;
    this.listButton = listButton;
    this.priceEditText = priceEditText;
    this.productNameEditText = productNameEditText;
    this.selectImageButton = selectImageButton;
    this.storeNameEditText = storeNameEditText;
    this.uploadButton = uploadButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVendorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVendorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_vendor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVendorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.descriptionEditText;
      EditText descriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionEditText == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.listButton;
      Button listButton = ViewBindings.findChildViewById(rootView, id);
      if (listButton == null) {
        break missingId;
      }

      id = R.id.priceEditText;
      EditText priceEditText = ViewBindings.findChildViewById(rootView, id);
      if (priceEditText == null) {
        break missingId;
      }

      id = R.id.productNameEditText;
      EditText productNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (productNameEditText == null) {
        break missingId;
      }

      id = R.id.selectImageButton;
      Button selectImageButton = ViewBindings.findChildViewById(rootView, id);
      if (selectImageButton == null) {
        break missingId;
      }

      id = R.id.storeNameEditText;
      EditText storeNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (storeNameEditText == null) {
        break missingId;
      }

      id = R.id.uploadButton;
      Button uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      return new ActivityVendorBinding((LinearLayout) rootView, descriptionEditText, imageView,
          listButton, priceEditText, productNameEditText, selectImageButton, storeNameEditText,
          uploadButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
