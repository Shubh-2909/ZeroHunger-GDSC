// Generated by view binder compiler. Do not edit!
package com.example.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCartBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button checkoutButton;

  @NonNull
  public final Button clearButton;

  @NonNull
  public final ListView listView;

  @NonNull
  public final LinearLayout productContainer;

  @NonNull
  public final TextView totalCostTextView;

  private ActivityCartBinding(@NonNull LinearLayout rootView, @NonNull Button checkoutButton,
      @NonNull Button clearButton, @NonNull ListView listView,
      @NonNull LinearLayout productContainer, @NonNull TextView totalCostTextView) {
    this.rootView = rootView;
    this.checkoutButton = checkoutButton;
    this.clearButton = clearButton;
    this.listView = listView;
    this.productContainer = productContainer;
    this.totalCostTextView = totalCostTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkoutButton;
      Button checkoutButton = ViewBindings.findChildViewById(rootView, id);
      if (checkoutButton == null) {
        break missingId;
      }

      id = R.id.clearButton;
      Button clearButton = ViewBindings.findChildViewById(rootView, id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.listView;
      ListView listView = ViewBindings.findChildViewById(rootView, id);
      if (listView == null) {
        break missingId;
      }

      id = R.id.productContainer;
      LinearLayout productContainer = ViewBindings.findChildViewById(rootView, id);
      if (productContainer == null) {
        break missingId;
      }

      id = R.id.totalCostTextView;
      TextView totalCostTextView = ViewBindings.findChildViewById(rootView, id);
      if (totalCostTextView == null) {
        break missingId;
      }

      return new ActivityCartBinding((LinearLayout) rootView, checkoutButton, clearButton, listView,
          productContainer, totalCostTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
