// Generated by view binder compiler. Do not edit!
package com.example.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FooterLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView aboutUsLink;

  @NonNull
  public final TextView contactUsLink;

  @NonNull
  public final ImageView facebookIcon;

  @NonNull
  public final TextView termsConditionsLink;

  @NonNull
  public final ImageView twitterIcon;

  private FooterLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView aboutUsLink,
      @NonNull TextView contactUsLink, @NonNull ImageView facebookIcon,
      @NonNull TextView termsConditionsLink, @NonNull ImageView twitterIcon) {
    this.rootView = rootView;
    this.aboutUsLink = aboutUsLink;
    this.contactUsLink = contactUsLink;
    this.facebookIcon = facebookIcon;
    this.termsConditionsLink = termsConditionsLink;
    this.twitterIcon = twitterIcon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FooterLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FooterLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.footer_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FooterLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_us_link;
      TextView aboutUsLink = ViewBindings.findChildViewById(rootView, id);
      if (aboutUsLink == null) {
        break missingId;
      }

      id = R.id.contact_us_link;
      TextView contactUsLink = ViewBindings.findChildViewById(rootView, id);
      if (contactUsLink == null) {
        break missingId;
      }

      id = R.id.facebook_icon;
      ImageView facebookIcon = ViewBindings.findChildViewById(rootView, id);
      if (facebookIcon == null) {
        break missingId;
      }

      id = R.id.terms_conditions_link;
      TextView termsConditionsLink = ViewBindings.findChildViewById(rootView, id);
      if (termsConditionsLink == null) {
        break missingId;
      }

      id = R.id.twitter_icon;
      ImageView twitterIcon = ViewBindings.findChildViewById(rootView, id);
      if (twitterIcon == null) {
        break missingId;
      }

      return new FooterLayoutBinding((LinearLayout) rootView, aboutUsLink, contactUsLink,
          facebookIcon, termsConditionsLink, twitterIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
